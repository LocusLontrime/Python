# accepted on codewars.com
# O(n^3) runtime
def max_sum(arr: list[int]):
    n = len(arr)
    maximum = 0

    for k in range(1, n):
        for start_ind in range(k):
            max_so_far = -100000001
            sliding_sum = 0
            for i in range(start_ind, n, k):
                # sliding window
                if (ar := arr[i]) > arr[i - k] or i == start_ind:
                    sliding_sum += ar if ar > 0 else 0
                else:
                    max_so_far = max(max_so_far, sliding_sum)
                    sliding_sum = ar if ar > 0 else 0
            max_so_far = max(max_so_far, sliding_sum)
            maximum = max(maximum, max_so_far)
    return maximum


# O(n^2) runtime
def max_sum_fast(arr: list[int]):
    length = len(arr)
    dp = [[_] * length for _ in arr]
    for j in range(length):
        for i in range(j):
            if arr[j] > arr[i] > 0:
                dp[j][j - i] += dp[i][j - i]
    res = 0

    for i in range(length):
        res = max(res, max(dp[i]))

    return res


# print(max_sum([-98, 0, 100, 88, 102]))
# print(max_sum([0, 13, 28, 73, 66, 57, 49, 2, 48, 25]))
# print(max_sum([68, 71, 93, 43, 73, 13, 25, 96, 83, 37]))
# print(max_sum([-86, 35, 21, 57, -70, 9, -88, -82, 0, -58, -93, 85, 96, 35, 82, 26, -26, -2, -5, 20, 49, -86, -40, -25, 31, 25, 8, -27, 68, -36, 68, -51, -14, -33, -22, -92, -34, 2, 53, 36, 20, 84, -69, -88, 71, 61, -68, 15, 90, 66, 81, 73, -72, 20, 15, 82, 12, 29, 24, 82, -33, 93, 22, 97, 58, 9, 37, 53, 14, -68, 59, 81, -57, 53, 65, 10, 69, 73, -58, 74, 2, -51, 71]))
print(max_sum([-408, 313, 654, -378, -386, 969, -300, 779, 583, -442, -598, -207, 464, 994, 978, -839, -357, 929, -910, 187, -240, -453, 797, -414, 4, -757, -154, 286, 959, -785, 875, -438, 920, -116, 253, -328, -650, -230, -344, 571, -59, -48, -379, -406, -83, 232, -727, 278, -929, -730, 741, -803, 857, 849, -7, -761, -737, 744, 204, -523, -276, -852, 737, -572, -654, -229, 529, -248, 369, -146, 483, 599, -974, 226, 795, -272, 187, -425, -496, -202, -236, 532, 747, -371, 788, -559, -909, 352, 844, -320, 258, -81, -990, -964, 695, 189, 816, 952, -531, 286, 563, 135, 37, -801, -150, -711, 762, -394, -879, -204, -587, -215, 241, -183, -134, 287, 612, 218, -286, 387, -925, 806, -303, 490, -284, -214, -934, -374, 712, 573, -283, -395, -612, -795, -829, -392, -368, -619, 813, -921, 891, 174, 612, -528, 961, 932, -556, -486, -533, 617, -974, 963, 296, -78, 297, -284, 221, -364, 826, -302, 514, 475, -128, 995, -593, 781, 364, 79, 802, 626, -781, 517, -209, 377, 991, -910, -932, 492, -461, 457, 761, -863, -95, -384, 661, 953, 71, 873, -732, -186, 733, 568, 201, -342, -662, -663, -941, 839, 821, -599, 270, 362, -262, -100, -520, 978, 645, 183, 296, -926, 727, 393, 572, -408, -490, -661, -666, -324, -711, 508, -873, -691, 267, -746, -83, 525, -253, 986, -597, -428, -910, 986, -10, 535, 111, 54, 745, 31, 876, 642, 181, -279, 934, -467, -917, 907, -972, -706, 60, 840, -465, 961, -751, 527, -319, 372, -22, -647, -192, 670, 943, -121, -525, -129, 181, -170, -613, -136, 61, -264, 421, -975, -283, -165, 517, 319, -271, 803, -520, -348, -100, 348, 63, 573, -558, 196, -722, -748, -720, -855, -97, -13, -112, 808, 753, 739, -548, 69, -924, 227, -718, 71, -624, 977, -836, 311, -691, 981, -349, -297, -213, 709, -486, -119, -143, 407, -306, 705, -27, -420, 309, -136, -763, -317, 505, -194, 631, 494, -60, -744, -625, 717, 134, -466, 882, -870, -320, 424, 831, 312, 811, 895, -280, -766, 328, 561, 528, -760, 409]))
# print(max_sum([-34, 0, 29, -37, -11, 30, 34, -33, 9, -43, -27, -39, -13, 44, 48]))
print(max_sum([-445, -586, 982, -296, -122, 399, -885, -10, -622, -214, -477, -79, 797, 772, -197, 562, 787, -381, -267]))
print(max_sum_fast([-445, -586, 982, -296, -122, 399, -885, -10, -622, -214, -477, -79, 797, 772, -197, 562, 787, -381, -267]))


