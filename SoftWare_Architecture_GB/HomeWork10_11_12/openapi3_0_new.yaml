openapi: 3.0.0
info:
  title: Сервис роботов-пылесосов
  version: 0.0.1
paths:
  /robots:
    get:
      summary: Метод получения списка привязанных устройств
      tags: 
        - Robots
      operationId: getAllRobots
      responses: 
        '200':
          description: Успешный ответ со списком привязанных устройств
          content: 
            adplication/json:
              schema: 
                $ref: "#/components/schemas/Robots"
        '404':
          description:  Not Found 
          content:
            adplication/json:
              schema: 
                $ref: "#/components/schemas/Error404"
        '500':
          description:  Internal Server Error 
          content:
            adplication/json:
              schema: 
                $ref: "#/components/schemas/Error500"
        'default':
          description: Все остальное
          content: 
            application/json:
              schema: 
                $ref: "#/components/schemas/Error"
    post: 
      summary: Метод подключения робота
      tags: 
        - Robots
      operationId: createRobotCleaner
      requestBody: 
        required: true
        content: 
          application/json:
            schema: 
              $ref: '#/components/schemas/Error'
      responses: 
        '200':
          description: Успешный ответ на подключение робота
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/RobotCleaner'
        '404':
          description:  Not Found 
          content:
            adplication/json:
              schema: 
                $ref: "#/components/schemas/Error404"
        '500':
          description:  Internal Server Error 
          content:
            adplication/json:
              schema: 
                $ref: "#/components/schemas/Error500"
        'default':
          description: Все остальное
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/Error'
  /robots/{fabrick_number}:
    get:
      summary: Метод получения привязанного устройства по ID
      tags: 
        - Robots
      operationId: getRobot
      parameters:
        - name: fabrick_number
          in: path
          required: true
          description: Уникальный id устройства
          schema:
            type: integer
          example: 1458586586
      responses: 
        '200':
          description: Успешный ответ с параметрами устройства
          content: 
            adplication/json:
              schema: 
                $ref: '#/components/schemas/RobotCleaner'
        '404':
          description:  Not Found 
          content:
            adplication/json:
              schema: 
                $ref: "#/components/schemas/Error404"
        '500':
          description:  Internal Server Error 
          content:
            adplication/json:
              schema: 
                $ref: "#/components/schemas/Error500"
        'default':
          description: Все остальное
          content: 
            application/json:
              schema: 
                $ref: "#/components/schemas/Error"
    delete: 
      summary: Метод удаления робота из облака по номеру
      tags: 
        - Robots
      operationId: cencelRobotsByNumber
      parameters: 
        - name: fabrick_number
          in: path
          required: true
          description: Уникальный id робота
          schema: 
            type: integer
          example: 78956547895
      responses: 
        '200':
          description: Успешный ответ на удаление устройства
          content: 
            adplication/json: {}
        '404':
          description:  Not Found 
          content:
            adplication/json:
              schema: 
                $ref: "#/components/schemas/Error404"
        '500':
          description:  Internal Server Error 
          content:
            adplication/json:
              schema: 
                $ref: "#/components/schemas/Error500"
        'default':
          description: Все остальное
          content: 
            adplication/json: 
              schema: 
                $ref: '#/components/schemas/Error'
  /users:
    get:
      summary: Метод получения списка пользователей
      tags: 
        - Users
      operationId: getAllUsersById
      responses: 
        '200':
          description: Успешный ответ со списком пользователей
          content: 
            adplication/json:
              schema: 
                $ref: '#/components/schemas/User'
        '404':
          description:  Not Found 
          content:
            adplication/json:
              schema: 
                $ref: "#/components/schemas/Error404"
        '500':
          description:  Internal Server Error 
          content:
            adplication/json:
              schema: 
                $ref: "#/components/schemas/Error500"
        'default':
          description: Все остальное
          content: 
            application/json:
              schema: 
                $ref: "#/components/schemas/Error" 
    put:
      summary: Метод получения спискадобавления пользователя
      tags: 
        - Users
      operationId: putNewUser
      responses: 
        '200':
          description: Успешный ответ при добавлении пользователя
          content: 
            adplication/json:
              schema: 
                $ref: '#/components/schemas/Users'
        '404':
          description:  Not Found 
          content:
            adplication/json:
              schema: 
                $ref: "#/components/schemas/Error404"
        '500':
          description:  Internal Server Error 
          content:
            adplication/json:
              schema: 
                $ref: "#/components/schemas/Error500"
        'default':
          description: Все остальное
          content: 
            application/json:
              schema: 
                $ref: "#/components/schemas/Error"           
    post: 
      summary: Метод регистрации (авторизации) пользователя
      tags: 
        - Users
      operationId: createAutUser
      requestBody: 
        required: true
        content: 
          application/json:
            schema: 
              $ref: '#/components/schemas/Error'
      responses: 
        '200':
          description: Успешный ответ на авторизацию(регистрацию) пользователя
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/User'
        '404':
          description:  Not Found 
          content:
            adplication/json:
              schema: 
                $ref: "#/components/schemas/Error404"
        '500':
          description:  Internal Server Error 
          content:
            adplication/json:
              schema: 
                $ref: "#/components/schemas/Error500"
        'default':
          description: Все остальное
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/Error'
  /users/{id}:
    delete: 
      summary: Метод удаления пользователя по ID
      tags: 
        - Users
      operationId: deleteUserById
      parameters: 
        - name: id
          in: path
          required: true
          description: Уникальный id пользователя
          schema: 
            type: integer
          example: 7955544
      responses: 
        '200':
          description: Успешный ответ на удаление пользователя
          content: 
            adplication/json: {}
        '404':
          description:  Not Found 
          content:
            adplication/json:
              schema: 
                $ref: "#/components/schemas/Error404"
        '500':
          description:  Internal Server Error 
          content:
            adplication/json:
              schema: 
                $ref: "#/components/schemas/Error500"
        'default':
          description: Все остальное
          content: 
            adplication/json: 
              schema: 
                $ref: '#/components/schemas/Error'
  /groups:
    get:
      summary: Метод получения списка групп
      tags: 
        - Groups
      operationId: getAllGroupsById
      responses: 
        '200':
          description: Успешный ответ со списком групп
          content: 
            adplication/json:
              schema: 
                $ref: '#/components/schemas/Groups'
        '404':
          description:  Not Found 
          content:
            adplication/json:
              schema: 
                $ref: "#/components/schemas/Error404"
        '500':
          description:  Internal Server Error 
          content:
            adplication/json:
              schema: 
                $ref: "#/components/schemas/Error500"
        'default':
          description: Все остальное
          content: 
            application/json:
              schema: 
                $ref: "#/components/schemas/Error" 
    put:
      summary: Метод добавления группы
      tags: 
        - Groups
      operationId: putNewGroup
      responses: 
        '200':
          description: Успешный ответ при добавлении группы
          content: 
            adplication/json:
              schema: 
                $ref: '#/components/schemas/Groups'
        '404':
          description:  Not Found 
          content:
            adplication/json:
              schema: 
                $ref: "#/components/schemas/Error404"
        '500':
          description:  Internal Server Error 
          content:
            adplication/json:
              schema: 
                $ref: "#/components/schemas/Error500"
        'default':
          description: Все остальное
          content: 
            application/json:
              schema: 
                $ref: "#/components/schemas/Error"           
    post: 
      summary: Метод регистрации группы
      tags: 
        - Groups
      operationId: createAutGroup
      requestBody: 
        required: true
        content: 
          application/json:
            schema: 
              $ref: '#/components/schemas/Error'
      responses: 
        '200':
          description: Успешный ответ на регистрацию группы
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/Group'
        '404':
          description:  Not Found 
          content:
            adplication/json:
              schema: 
                $ref: "#/components/schemas/Error404"
        '500':
          description:  Internal Server Error 
          content:
            adplication/json:
              schema: 
                $ref: "#/components/schemas/Error500"
        'default':
          description: Все остальное
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/Error'
  /groups/{id}:
    delete: 
      summary: Метод удаления группы по ID
      tags: 
        - Groups
      operationId: deleteGroupById
      parameters: 
        - name: id
          in: path
          required: true
          description: Уникальный id группы
          schema: 
            type: integer
          example: 7955544
      responses: 
        '200':
          description: Успешный ответ на удаление группы
          content: 
            adplication/json: {}
        '404':
          description:  Not Found 
          content:
            adplication/json:
              schema: 
                $ref: "#/components/schemas/Error404"
        '500':
          description:  Internal Server Error 
          content:
            adplication/json:
              schema: 
                $ref: "#/components/schemas/Error500"
        'default':
          description: Все остальное
          content: 
            adplication/json: 
              schema: 
                $ref: '#/components/schemas/Error'
  /shedules:
    get:
      summary: Метод получения списка расписаний
      tags: 
        - Shedules
      operationId: getAllShedulesById
      responses: 
        '200':
          description: Успешный ответ со списком расписаний
          content: 
            adplication/json:
              schema: 
                $ref: '#/components/schemas/Shedules'
        '404':
          description:  Not Found 
          content:
            adplication/json:
              schema: 
                $ref: "#/components/schemas/Error404"
        '500':
          description:  Internal Server Error 
          content:
            adplication/json:
              schema: 
                $ref: "#/components/schemas/Error500"
        'default':
          description: Все остальное
          content: 
            application/json:
              schema: 
                $ref: "#/components/schemas/Error" 
    put:
      summary: Метод обновления расписания
      tags: 
        - Shedules
      operationId: putNewShedule
      responses: 
        '200':
          description: Успешный ответ при обновлении расписания
          content: 
            adplication/json:
              schema: 
                $ref: '#/components/schemas/Shedules'
        '404':
          description:  Not Found 
          content:
            adplication/json:
              schema: 
                $ref: "#/components/schemas/Error404"
        '500':
          description:  Internal Server Error 
          content:
            adplication/json:
              schema: 
                $ref: "#/components/schemas/Error500"
        'default':
          description: Все остальное
          content: 
            application/json:
              schema: 
                $ref: "#/components/schemas/Error"           
    post: 
      summary: Метод регистрации расписания
      tags: 
        - Shedules
      operationId: createAutShedule
      requestBody: 
        required: true
        content: 
          application/json:
            schema: 
              $ref: '#/components/schemas/Error'
      responses: 
        '200':
          description: Успешный ответ на регистрацию расписания
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/Shedule'
        '404':
          description:  Not Found 
          content:
            adplication/json:
              schema: 
                $ref: "#/components/schemas/Error404"
        '500':
          description:  Internal Server Error 
          content:
            adplication/json:
              schema: 
                $ref: "#/components/schemas/Error500"
        'default':
          description: Все остальное
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/Error'
  /shedules/{id}:
    delete: 
      summary: Метод удаления расписания по ID
      tags: 
        - Shedules
      operationId: deleteSheduleById
      parameters: 
        - name: id
          in: path
          required: true
          description: Уникальный id расписания
          schema: 
            type: integer
          example: 7955544
      responses: 
        '200':
          description: Успешный ответ на удаление расписания
          content: 
            adplication/json: {}
        '404':
          description:  Not Found 
          content:
            adplication/json:
              schema: 
                $ref: "#/components/schemas/Error404"
        '500':
          description:  Internal Server Error 
          content:
            adplication/json:
              schema: 
                $ref: "#/components/schemas/Error500"
        'default':
          description: Все остальное
          content: 
            adplication/json: 
              schema: 
                $ref: '#/components/schemas/Error'
components:
  schemas: 
    RobotCleaner:
      type: object
      required: 
        - resources
        - fabrick_number
        - ip_adress
        - id_group
        - status
      properties: 
        resources:
          type: integer
          example: 90
        fabrick_number:
          type: integer
          example: 792566
        ip_adress:
          type: string
          example: 192.128.8.5
        id_group:
          type: integer
          example: 2
        status:
          type: string
          example: Зарядка
    Robots:
      type: array
      items: 
        $ref: '#/components/schemas/RobotCleaner' 
    User:
      type: object
      required: 
        - id
        - hash
        - question
      properties: 
        id:
          type: integer
          example: 124556
        hash:
          type: integer
          example: 8965658985658754545454  
        question:
          type: string
          description: Контрольный вопрос пользователя
    Users:
      type: array
      items: 
        $ref: '#/components/schemas/User'
    Group:
      type: object
      required:
        - id
        - user_id
      properties:
        id:
          type: integer
          example: 7895262
        user_id:
          type: integer
          example: 8999999
    Groups:
      description: Список групп
      type: array
      items:
        $ref: '#/components/schemas/Group'
    Shedule:
      description: Данные расписания
      type: object
      required:
        - id
        - day
        - time
        - mode
        - robotCI_id
        - us_group_id
        - areas_ci
      properties:
        id:
          type: integer
          example: 7895262
        day:
          type: integer
          example: 210101
        time:
          type: integer
          example: 1200
        mode:
          type: integer
          example: 5
        robotCI_id:
          type: integer
          example: 1111111
        us_group_id:
          type: integer
          example: 2222222
        areas_ci:
          type: integer
          example: 3333333
    Shedules:
      description: Список расписаний
      type: array
      items:
        $ref: '#/components/schemas/Shedule'      
    Error404:
      type: object
      required: 
        - code
        - message
      properties: 
        code:
          type: integer
          description: '404'
        message:
          type: string
          example: '404 Not Found'
    Error500:
      type: object
      required: 
        - code
        - message
      properties: 
        code:
          type: integer
          description: '500'
        message:
          type: string
          example: '500 Internal Server Error'
    Error:
      type: object
      required: 
        - code
        - message
      properties: 
        code:
          type: integer
        message:
          type: string
          example: 'Error'
