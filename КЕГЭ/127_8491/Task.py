# accepted on kompege.ru

# -*- coding: utf-8 -*-
# Метеорологическая станция ежеминутно снимали показания прибора в течение N минут (N – целое число),
# которое измеряет количество осадков в условных единицах за минуту, предшествующую снятию показаний.
# Необходимо найти максимальную сумму M показаний, между которыми прошло не менее K минут.

# Входные данные

# Даны два входных файла (файл A и файл B),
# каждый из которых в первой строке содержит число N (1 ≤ N ≤ 10 000 000) – количество измерений показателя.
# Во второй строке число K (N >> K) – минимальное время, которое должно пройти между двумя снятиями показаний.
# В третьей строке число M (2 ≤ M ≤ 1000) - количество показаний.
# В каждой из следующих N строк находятся одно число: количество осадков (все числа неотрицательные, не превышающие 10 000 000).
# Числа указаны в порядке снятия показаний прибора, начиная с первой минуты.

# В ответе укажите два числа: сначала значение искомой величины для файла А, затем – для файла B.

# Типовой пример организации данных во входном файле
# 10, 3, 3, 98, 97, 91, 90, 162, 188, 23, 152, 26, 187

# При таких исходных данных, когда минимальное время между тремя снятиями показаний составляет 3 минуты,
# максимальная сумма показаний равна 473.


def max_sum_k_elements(k: int, m: int, array: list[int]):
    # array's length:
    n = len(array)
    # dp:
    memo_table = [[0 for i in range(n)] for j in range(m)]
    # the core cycle (bottom up dp):
    for j in range(m):
        max_ = 0
        for i in range(k * j, n - (m - j - 1) * k):
            max_ = max(max_, memo_table[j - 1][i - k] + array[i])
            memo_table[j][i] = max_

    # for i, row in enumerate(memo_table):
    #     print(f'{i} -> {row}')

    return memo_table[-1][-1]


def get_arr(file_name: str):
    arr_ = []
    with open(file_name, 'r') as f:
        arr_ = map(int, f.readlines()[3:])
        f.close()
    arr_ = list(arr_)
    return arr_


test_ex = 3, 3, [3, 3, 98, 97, 91, 90, 162, 188, 23, 152, 26, 187]
arr_A = get_arr(f'27a_8491.txt')
arr_B = get_arr(f'27b_8491.txt')


print(f'test ex -> {max_sum_k_elements(*test_ex)}')
print(f'file A -> {max_sum_k_elements(93, 8, arr_A)}')
print(f'file B -> {max_sum_k_elements(4748, 386, arr_B)}')                            # 36 366 98 989 98989 LL
