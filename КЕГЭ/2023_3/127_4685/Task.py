# accepted on kompege.ru

# -*- coding: utf-8 -*-
# Задание 127 (№4685).
#
# На каждом километре автомагистрали, начиная с первого, расположены пункты питания.
# Известна суточная потребность каждого пункта питания в количестве готовых обедов. По
# правилам готовую еду нельзя перевозить на расстояние, превышающее М км.
#
# Для транспортировки используются термоконтейнеры вместимостью не более 6 готовых
# обедов. Каждый термоконтейнер используется для доставки только в один пункт питания,
# при этом в каждый пункт питания может быть доставлено не более одного термоконтейнера с
# неполной загрузкой. Компания-производитель расположила в двух пунктах питания два цеха
# для производства готовых обедов так, что из этих цехов в пункты питания ежедневно
# отправляется максимальное количество термоконтейнеров с готовыми обедами.
#
# Определите необходимое суммарное количество термоконтейнеров для ежедневной
# перевозки готовых обедов в пункты питания из двух цехов.
#
# Входные данные
#
# Дано два входных файла (файл Аи файл В), каждый из которых в первой строке содержит два
# числа №и М (1 < М< 10 000 000, 1 < М < 10 000 000) количество пунктов и максимальное
# расстояние, на которое разрешается перевозить комплект готового питания. В каждой из
# следующих М строк находится одно число: суточная потребность соответствующего пункта в
# комплектах готового питания. Информация о пунктах дана в порядке их расположения вдоль
# автомагистрали.
#
# В ответе укажите два числа: сначала значение искомой величины для файла А, затем - для
# файла В.
import math


def max_thermal_container_quantity(m: int, array: list[int]):
    CAPACITY = 6
    n = len(array)
    _sum = sum(math.ceil(el / CAPACITY) for el in array[:2 * m + 1])
    sum_ = sum(math.ceil(el / CAPACITY) for el in array[2 * m + 1:4 * m + 2])
    max_left_sum = _sum
    max_sum = _sum + sum_
    for i in range(2 * m + 1, n - (2 * m + 1)):
        _sum += math.ceil(array[i] / CAPACITY) - math.ceil(array[i - (2 * m + 1)] / CAPACITY)
        sum_ += math.ceil(array[2 * m + 1 + i] / CAPACITY) - math.ceil(array[i] / CAPACITY)
        max_left_sum = max(max_left_sum, _sum)
        max_sum = max(max_sum, sum_ + max_left_sum)
    return max_sum


def get_arr(file_name: str):
    arr_ = []
    with open(file_name, 'r') as f:
        arr_ = map(int, f.readlines()[1:])
        f.close()
    arr_ = list(arr_)
    return arr_


test_ex = 1, [6, 1, 8, 4, 3, 5, 2, 7]

arr_A = get_arr(f'27A_4685.txt')
arr_B = get_arr(f'27B_4685.txt')

print(f'res test -> {max_thermal_container_quantity(*test_ex)}')
print(f'res file A -> {max_thermal_container_quantity(329, arr_A)}')
print(f'res file B -> {max_thermal_container_quantity(4029, arr_B)}')                 # 36 366 98 989 98989 LL

